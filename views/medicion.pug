-var datos = JSON.stringify(data)
-var dictionary = data.dictionary
doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0')
    title
    link(rel='stylesheet', href='https://fonts.googleapis.com/css?family=Lato|Open+Sans')
    link(rel='stylesheet', href='main.css')
    script(src='http://code.jquery.com/jquery-latest.js')
    script(src='arriba.js')
    link(rel='stylesheet', href='fonts.css')
    script.
      data = JSON.parse("#{datos}".replace(/&quot;/g,'"'));
      estacion = data.estacion_id;
      sensor = data.sensor_id;
      dias = data.fecha;
      detalles = data.details;
      datosMed = data.mediciones;
      datosAyer = data.medicionesayer;
      function eliminarMedicion (timestamp){
        var date = new Date(Date.parse(timestamp)+10800000);
          $.post("http://"+window.location.host+"/"+data.estacion_id+"/"+data.sensor_id+"/delete/"+date.getFullYear()+"/"+(date.getMonth()+1)+"/"+date.getDate()+"/"+date.getHours()+"/"+date.getMinutes(), function( data ) {
            if(data == "202"){
              alert("Registro eliminado");
            }
            else {
              alert("No se pudo eliminar");
            }
            console.log('mediciones/'+sensor+'/'+estacion+'/?date='+((datosMed[0]).At).substring(0,10)+'&details=true');
            getData('mediciones/'+sensor+'/'+estacion+'/?date='+((datosMed[0]).At).substring(0,10)+'&details=true');
        });
      }
       function agregarMedicion (timestamp){
        var date = new Date(Date.parse(timestamp)+10800000);
          $.post("http://"+window.location.host+"/"+data.estacion_id+"/"+data.sensor_id+"/add/"+date.getFullYear()+"/"+(date.getMonth()+1)+"/"+date.getDate()+"/"+date.getHours()+"/"+date.getMinutes(), function( data ) {
            if(data == "202"){
              alert("Registro agregado");
            }
            else {
              alert("No se pudo agregar");
            }
            console.log('mediciones/'+sensor+'/'+estacion+'/?date='+((datosMed[0]).At).substring(0,10)+'&details=true');
            getData('mediciones/'+sensor+'/'+estacion+'/?date='+((datosMed[0]).At).substring(0,10)+'&details=true');
        });
      }
      $(document).ready( function() {
        if (dias){
            var options = {
                title: {
                  text: "Datos del día"
                },
                            animationEnabled: true,
                data: [
                {
                  type: "spline",
                  dataPoints: []
                }
                ]
              };
        for(i=0; i < datosMed.length; i++){
          var date = new Date(Date.parse(datosMed[i].At)+10800000);
          if(datosMed[i].Active)
            (options.data)[0].dataPoints.push({x:date, y:datosMed[i].State});
        }
        var chart = new CanvasJS.Chart("chart", options);
        chart.render();
              }
                  var now = new Date();
                  var month = (now.getMonth() + 1);               
                  var day = now.getDate();
                  if(month < 10) 
                      month = "0" + month;
                  if(day < 10) 
                      day = "0" + day;
                  var today = now.getFullYear() + "-" + month + "-" + day; 
                  $('#FromDate').attr("value", today);
              });
      buscarProm(1);
      function buscarProm(cant){
        if(!dias)
          datosMed = data.medicioneshoy;
        horas = datosMed.length;
        long = datosMed.length;
        if (cant <= horas){
          var tot = 0;
          for(i = long-1; i >= long-cant; i--){
            tot += datosMed[i].State;
          }
          var prom = tot/(cant);
          $("#valor").val(prom.toFixed(2) + " " + (data.dictionary[sensor])[1]);
        }
        else {
          var tot = 0;
          longayer = datosAyer.length;
          for(i = long-1; i >= 0; i--){
            tot += datosMed[i].State;
          }
          for(i=longayer-1; i >= longayer - (cant-long); i--){
            tot += datosAyer[i].State;
          }
          var prom = tot /(cant);
          $("#valor").val(prom.toFixed(2) + " " + (data.dictionary[sensor])[1]);
        }
      }
  body        
    .container
      h1.claseh1(style='margin-right: 56px;')= (dictionary[data.estacion_id])
      h2.claseh2= dictionary[data.sensor_id][0]
      if(data.today)
        #promedios
              control-label Promedios:
              select.prome(onchange='buscarProm(this.options[this.selectedIndex].value)')
                option(value=1) Última hora
                option(value=3) Últimas 3 hs
                option(value=8) Últimas 8 hs
                option(value=12) Últimas 12 hs
                option(value=24) Últimas 24 hs
              input(type="text", disabled)#valor
      if (data.fecha)
        #chart
      .row
        if (data.details)
          button.btn.btn-primary(type='button', onclick='getData("mediciones/'+data.sensor_id+'/'+data.estacion_id+'/?date='+data.fecha+'");')#atras Atras
        else if (data.fecha)
          if (data.details)
          button.btn.btn-primary(type='button', onclick='getData("mediciones/'+data.sensor_id+'/'+data.estacion_id+'");')#atras Atras
        else
          button.btn.btn-primary(type='button', onclick='getData("sensores/'+data.estacion_id+'");')#atras Atras
        .form-group(style='margin-top: 50px; margin-left:-90px;')
          label.col-sm-2.control-label.controlsensor(for='inputPassword') SENSOR
          .col-sm-10(style='top: -82px;')
            select(onchange='getData("mediciones/"+this.options[this.selectedIndex].value+"/'+data.estacion_id+'");', style='margin-bottom:0px;').form-control.selectsensor
              for sensor in data.sensores
                if data.sensor_id == sensor.Id
                  option(value=sensor.Id, selected)= dictionary[sensor.Id][0]
                else
                  option(value=sensor.Id)= dictionary[sensor.Id][0]
          .col-md-12        
            #selector
                form(onsubmit='return getData("mediciones/'+data.sensor_id+'/'+data.estacion_id+'/?date="+this.elements["date"].value);')
                  #fecha
                    label(for='FromDate') Ingresa Fecha:
                    input(type='date', name='date')#FromDate
                  hr
                  input#btnSubmit.btn.btn-outline-success(type='submit',value='Buscar')

          span.ir-arriba.icon-arrow-up
          .col-md-12

            if(data.fecha && !data.details)
                button#detalles(onclick='getData("mediciones/'+data.sensor_id+'/'+data.estacion_id+'/?date='+data.mediciones[0].At.substring(0,10)+'&details=true");').btn.btn-outline-info Detalles del día
            
            if(data.fecha)
              if(data.details)
                a.btn.btn-outline-success(href='./'+data.estacion_id+'/'+data.sensor_id+'/download/'+data.fecha+'/details=true',download) Descargar CSV
              else
                a.btn.btn-outline-success(href='./'+data.estacion_id+'/'+data.sensor_id+'/download/'+data.fecha+'/details=false',download) Descargar CSV
            #contacts        
              table.table.table-bordered.table-inverse(style='margin-top:30px;')#tabla 
                thead 
                  tr
                    th Timestamp
                    
                    th Valor
                    th Unidad
                    if(data.fecha && !data.details)
                      th Estado
                    if(data.details)
                      th Estado
                      th Borrar
                    if (!data.fecha)
                      th Descargar Promedios
                tbody
                  for medicion in data.mediciones
                    tr
                      td
                        if(medicion.Day)
                          a(href="#", onclick='getData("mediciones/'+data.sensor_id+'/'+data.estacion_id+'/?date='+medicion.Day.substring(0,10)+'");')= medicion.Day
                        else
                          = medicion.At
                      td= medicion.State
                      td= dictionary[data.sensor_id][1]
                      if(data.fecha)
                        td= medicion.Active
                        if (data.details)
                          td
                            if (medicion.Active)
                              button.btn.btn-danger(onclick='eliminarMedicion("'+medicion.At+'");') Borrar
                            else
                              button.btn.btn-success(onclick='agregarMedicion("'+medicion.At+'");') Agregar
                      else
                        td 
                          a.btn.btn-outline-info(href='./'+data.estacion_id+'/'+data.sensor_id+'/download/'+medicion.Day.substring(0,10)+'/details=false',download) Descargar CSV


                      